# -*- coding: utf-8 -*-
"""Final Project Graphs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZkKiU8F8zZOGGu-wGJNKiBLoLTn5bGHJ
"""

import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.ticker import (MultipleLocator,
                               FormatStrFormatter,
                               AutoMinorLocator)

from google.colab import files
uploaded = files.upload()

"""#Creating Graphs

##Average Bike Rental an hour VS. Time
"""

bikes = pd.read_csv('hour.csv')

hours = []
counts = []
for i in range(24):
    counts.append(bikes.loc[bikes['hr'] == i,('hr', 'cnt')].mean()['cnt'])
    hours.append(i)

fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average bikes rented by time of day')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Time of day')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, counts)
plt.show()

"""##Average Bike Rental an hour VS. Month"""

months = ['Jan','Feb','Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
counts = []
for i in range(1,13):
    counts.append(bikes.loc[bikes['mnth'] == i,('hr', 'cnt')].mean()['cnt'])
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average bikes an hour rented each month')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Month Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(months, counts)
plt.show()

"""##Average Bike Rental an hour VS. Time in Winter"""

hours = []
counts = []
for i in range(24):
    counts.append(bikes.loc[bikes['season'] == 1,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour in winter')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, counts)
plt.show()

"""##Average Bike Rental an hour VS. Time in Spring"""

hours = []
counts = []
for i in range(24):
    counts.append(bikes.loc[bikes['season'] == 3,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour in spring')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, counts)
plt.show()

"""##Average Bike Rental an hour VS. Time in Summer"""

hours = []
counts = []
for i in range(24):
    counts.append(bikes.loc[bikes['season'] == 3,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour in Summer')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, counts)
plt.show()

"""##Average Bike Rental an hour VS. Time in Fall"""

hours = []
counts = []
for i in range(24):
    counts.append(bikes.loc[bikes['season'] == 4,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour in Fall')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, counts)
plt.show()

"""##Average Bike Rental an hour VS. Temperatue"""

k = bikes.temp.unique()*100
k.tolist()
k.sort()
counts = []
for i in k:
    counts.append(bikes.loc[bikes['temp'] == i/100,('hr', 'cnt')].mean()['cnt'])
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average bikes an hour rented vs temp')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Temp')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(k, counts)
plt.show()

weathers = [1,2,3,4]
counts = []
for i in weathers:
    counts.append(bikes.loc[bikes['weathersit'] == i,('hr', 'cnt')].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average Bikes rented per Hour by Weather')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Weather')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.bar(['Clear', 'Misty', 'Light Precip', 'Heavy Precip'], counts)
plt.show()

"""##Average Bike Rental an hour VS. Time sorted by working and not working days"""

hours = []
counts_1 = []
counts_2 = []
for i in range(24):
    counts_1.append(bikes.loc[bikes['workingday'] == 1,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    counts_2.append(bikes.loc[bikes['workingday'] == 0,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour on Non Working Days')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
line1 = ax.plot(hours, counts_1, label='Work Days')
line2 = ax.plot(hours, counts_2, label='Non-Work Days')
ax.legend(loc = 'lower right')

plt.show()

"""##Average Bike Rental an hour VS. Time, Sorted by Season"""

hours = []
countsw = []
countssp = []
countssum = []
countsf =[]
for i in range(24):
    countsw.append(bikes.loc[bikes['season'] == 1,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    countssp.append(bikes.loc[bikes['season'] == 2,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    countssum.append(bikes.loc[bikes['season'] == 3,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    countsf.append(bikes.loc[bikes['season'] == 4,('hr', 'cnt')].loc[bikes['hr'] == i].mean()['cnt'])
    hours.append(i)
    
fig, ax = plt.subplots()
  
# setting title to graph
ax.set_title('Average by hour and season')
  
# label x-axis and y-axis
ax.set_ylabel('Bikes rented')
ax.set_xlabel('Hour Rented')
ax.xaxis.set_minor_locator(MultipleLocator(1))
  
# function to plot and show graph
ax.plot(hours, countsw, label='Winter')
ax.plot(hours, countssp, label='Spring')
ax.plot(hours, countssum, label='Summer')
ax.plot(hours, countsf, label='Fall')
ax.legend(loc = 'lower right')

plt.show()